{IF_FOLDER}rewrite ^/{FOLDERNOTRAILINGSLASH}$ /{FOLDER} permanent;

### delete default robots.txt location
location = /{FOLDER}robots.txt {
        allow all;
        log_not_found off;
        access_log off;
        if (!-e $request_filename){
                rewrite ^/{FOLDER}robots.txt$ /{FOLDER}index.php last;
        }
}

location @rewriteapp{FOLDERMD5} {
        root {DOCROOT}{FOLDER}public/;
        client_max_body_size 100M;
        rewrite ^/{FOLDER}(.*)$ /{FOLDER}index.php last;
}

location @php {
    try_files $uri =404;
    include /etc/nginx/fastcgi_params;
    {FASTCGIPASS}
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
    fastcgi_intercept_errors on;
}

location /{FOLDER} {
        alias {DOCROOT}{FOLDER}public/;
        client_max_body_size 100M;
        index index.php;
        http2_push_preload on;

        rewrite ^/{FOLDER}(.+)\.php/(.*)$ /{FOLDER}$1.php last;

        try_files $uri @rewriteapp{FOLDERMD5};

        ### SECURITY ###
        ## Deny all attems to access possible configuration files
        #location ~ \.(tpl|yml|ini|log)$ {
        #       return 404;
        #}

        ## Deny access to media upload folder
        location ^~ /{FOLDER}media/temp/ {
                return 404;
        }

        # Shopware caches and logs
        location ^~ /{FOLDER}var/ {
                return 404;
        }

        # Deny access to root files
        location ~ (autoload\.php|composer\.(json|lock|phar)|CONTRIBUTING\.md|eula.*\.txt|license\.txt|README\.md|UPGRADE-(.*)\.md|.*\.dist)$ {
                return 404;
        }

        # Restrict access to shop configs files
        location ~ /{FOLDER}(web\/cache\/(config_\d+\.json|all.less))$ {
                return 404;
        }

        # Restrict access to theme configurations
        location ~ /{FOLDER}themes/(.*)(.*\.lock|package\.json|Gruntfile\.js|all\.less)$ {
                return 404;
        }

        location ^~ /{FOLDER}files/documents/ {
                return 404;
        }

        location ^~ /{FOLDER}files/backup/ {
                return 404;
        }

        # Restrict access to plugin xmls
        location ~ /{FOLDER}custom/.*(config|menu|services|plugin)\.xml$ {
                # rewrite, because this is the default behaviour for non-existing files and
                # makes it difficult to detect whether a plugin is installed or not by checking the files
                rewrite . /index.php?controller=Error&action=pageNotFoundError last;
        }
        ### SECURITY END ###

        ### INSTALLATION BLOCK ###
        location /{FOLDER}recovery/install {
                if (!-e $request_filename){
                    rewrite . /{FOLDER}recovery/install/index.php last;
                }
        }

        location /{FOLDER}recovery/update {
                if (!-e $request_filename){
                        rewrite . /{FOLDER}recovery/update/index.php last;
                }
        }
        ### INSTALLATION BLOCK END ###

        location ~ \.php$ {
                try_files $uri =404;
                include /etc/nginx/fastcgi_params;
                {FASTCGIPASS}
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $request_filename;
                fastcgi_intercept_errors on;
                fastcgi_temp_file_write_size 10m;
                fastcgi_busy_buffers_size    512k;
                fastcgi_buffer_size          512k;
                fastcgi_buffers           16 512k;
                fastcgi_read_timeout 1200;
                fastcgi_param HTTP_AUTHORIZATION $http_authorization;
                fastcgi_param PATH "/usr/local/bin:/usr/bin";
                #fastcgi_param SHOPWARE_ENV $shopware_env if_not_empty;
                http2_push_preload on;
        }
}